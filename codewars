function _if(bool, func1, func2) {
return bool ? func1() : func2();
}

const quarterOf = (month) => {
  // Your code here
   if (month <= 3) {
    return 1
  } else if (month <= 6) {
    return 2
  } else if (month <= 9) {
    return 3
  } else if (month <= 12) {
    return 4
  }
}

function simpleMultiplication(number) {
    // your code........
  return number * (number % 2 > 0 ? 9 : 8)
}


function reverseWords(str){
  return str.split(' ').reverse().join(' '); // reverse those words
}


function howManyLightsabersDoYouOwn(name) {
  return name === 'Zach' ? 18 : 0;
}


function powersOfTwo(n){
  var result = [];
  for (var i = 0; i <= n; i++) {
    result.push(Math.pow(2, i));
  }
  return result;
}


function betterThanAverage(classPoints, yourPoints) {
  // Your code here
  let classAvg = 0;
  for (let i = 0; i < classPoints.length; i++){
    classAvg += classPoints[i]; 
  }
  classAvg = classAvg/classPoints.length; 
  return yourPoints > classAvg;
}


var humanYearsCatYearsDogYears = function(humanYears) {
  if (humanYears <= 2)
    return [humanYears, 6 + 9 * humanYears, 6 + 9 * humanYears]
  else
    return [humanYears, 16 + 4 * humanYears, 14 + 5 * humanYears]
}



const zeroFuel = (distanceToPump, mpg, fuelLeft) => {
  let ourDistance = mpg * fuelLeft
  if(ourDistance >= distanceToPump){
   return true;
  }else{
   return false
}
};


sayHello = name => 'Hello, ' + name;


function booleanToString(b){
  if(b){
    return "true";
  }else{
    return "false";
  }
}


function monkeyCount(n) {
  var monkey = [];
  for (i = 1; i <= n; i++) {
    monkey.push(i);
  }
  return monkey;
}


function sumStr(a,b) {
  return (+a + +b).toString();
}


function howMuchILoveYou(nbPetals){
  if(nbPetals%6 == 1){
    return ("I love you");
  }else if(nbPetals%6 == 2){
    return ("a little");
  }else if(nbPetals%6 ==3){
    return ("a lot");
  }else if(nbPetals%6 ==4){
    return ("passionately");
  }else if(nbPetals%6 == 5){
    return ("madly");
  }else{
    return ("not at all");
  }
}

howMuchILoveYou(0);



function duckDuckGoose(players, goose) {
  
  return players[(goose-1)%players.length].name
}


function numberToPower(number, power){
  result = 1
  for (let i=1; i <= power; i++){
    result = result * number;
  }
  return result
}


function makeNegative(num) {
  return Math.sign(num) === 1 ? -num : num
}



function switchItUp(number) {
  switch (number) {
    case 0:
      return 'Zero'
    case 1:
      return 'One'
    case 2:
      return 'Two'
    case 3:
      return 'Three'
    case 4:
      return 'Four'
    case 5:
      return 'Five'
    case 6:
      return 'Six'
    case 7:
      return 'Seven'
    case 8:
      return 'Eight'
    case 9:
      return 'Nine'
  }
}



function stringToNumber(str) {
return Number(str)
}


function hoopCount(n) {
  if (n >= 10) return 'Great, now move on to tricks'
  return 'Keep at it until you get it'
}



function repeatStr(n, s) {
  return s.repeat(n)
}



isEven = num => num % 2 === 0
const lovefunc = (flower1, flower2) =>
  (isEven(flower1) && !isEven(flower2)) || (!isEven(flower1) && isEven(flower2))



function basicOp(operation, value1, value2) {
  switch (operation) {
    case '+':
      return value1 + value2
    case '-':
      return value1 - value2
    case '*':
      return value1 * value2
    case '/':
      return value1 / value2
  }
}


function getRealFloor(n) {
  if (n === 0) return n
  if (n < 0) return n
  if (n < 13) return n - 1
  if (n >= 13) return n - 2
}



function doubleChar(string) {
  return string
    .split('')
    .map(char => `${char}${char}`)
    .join('')
}


function boolToWord( bool ){
  //...
if (bool === true) return "Yes";
		return "No";
}


var number = function(busStops){
  let totalEntries = 0
  let totalDowns = 0
  busStops.map((arr)=> { 
    totalEntries += arr[0] 
    totalDowns += arr[1]
  })
  return totalEntries  - totalDowns
}
